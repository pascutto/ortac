(cram
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm)))

(rule
 (target all_warnings_errors)
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (ignore-stdout
    (with-stderr-to
     %{target}
     (run ortac qcheck-stm %{dep:all_warnings.mli} "make 16 'a'" "char t"))))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (diff all_warnings_errors.expected all_warnings_errors)))

(library
 (name array)
 (modules array))

(library
 (name hashtbl)
 (modules hashtbl))

(test
 (name array_stm_tests)
 (package ortac-qcheck-stm)
 (modules array_stm_tests)
 (libraries
  qcheck-core
  qcheck-core.runner
  qcheck-stm.stm
  qcheck-stm.sequential
  qcheck-multicoretests-util
  ortac-runtime
  array)
 (flags :standard -w -26-27-32-33)
 (action
  (echo
   "\n%{dep:array_stm_tests.exe} has been generated with the ortac-qcheck-stm plugin.\n")))

(rule
 (target array_stm_tests.ml)
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (with-stderr-to
    array_errors
    (with-stdout-to
     %{target}
     (run ortac qcheck-stm %{dep:array.mli} "make 16 'a'" "char t"))))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (progn
   (diff array_errors.expected array_errors)
   (diff array_stm_tests.expected.ml array_stm_tests.ml))))

(rule
 (alias launchtests)
 (action
  (run %{dep:array_stm_tests.exe} -v)))

(test
 (name hashtbl_stm_tests)
 (package ortac-qcheck-stm)
 (modules hashtbl_stm_tests)
 (libraries
  qcheck-core
  qcheck-core.runner
  qcheck-stm.stm
  qcheck-stm.sequential
  qcheck-multicoretests-util
  ortac-runtime
  hashtbl)
 (flags :standard -w -23-26-27-32-33 -w -37)
 (action
  (echo
   "\n%{dep:hashtbl_stm_tests.exe} has been generated with the ortac-qcheck-stm plugin.\n")))

(rule
 (target hashtbl_stm_tests.ml)
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (with-stderr-to
    hashtbl_errors
    (with-stdout-to
     %{target}
     (run
      ortac
      qcheck-stm
      %{dep:hashtbl.mli}
      "create ~random:false 16"
      "(char, int) t"))))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (progn
   (diff hashtbl_errors.expected hashtbl_errors)
   (diff hashtbl_stm_tests.expected.ml hashtbl_stm_tests.ml))))

(rule
 (alias launchtests)
 (action
  (run %{dep:hashtbl_stm_tests.exe} -v)))

(library
 (name record)
 (modules record))

(test
 (name record_stm_tests)
 (package ortac-qcheck-stm)
 (modules record_stm_tests)
 (libraries
  qcheck-core
  qcheck-core.runner
  qcheck-stm.stm
  qcheck-stm.sequential
  qcheck-multicoretests-util
  ortac-runtime
  record)
 (flags :standard -w -27)
 (action
  (echo
   "\n%{dep:record_stm_tests.exe} has been generated with the ortac-qcheck-stm plugin.\n")))

(rule
 (target record_stm_tests.ml)
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (with-stderr-to
    record_errors
    (with-stdout-to
     %{target}
     (run ortac qcheck-stm %{dep:record.mli} "make 42" "t"))))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (progn
   (diff record_errors.expected record_errors)
   (diff record_stm_tests.expected.ml record_stm_tests.ml))))

(rule
 (alias launchtests)
 (action
  (run %{dep:record_stm_tests.exe} -v)))

(library
 (name ref)
 (modules ref))

(test
 (name ref_stm_tests)
 (package ortac-qcheck-stm)
 (modules ref_stm_tests)
 (libraries
  qcheck-core
  qcheck-core.runner
  qcheck-stm.stm
  qcheck-stm.sequential
  qcheck-multicoretests-util
  ortac-runtime
  ref)
 (flags :standard -w -27)
 (action
  (echo
   "\n%{dep:ref_stm_tests.exe} has been generated with the ortac-qcheck-stm plugin.\n")))

(rule
 (target ref_stm_tests.ml)
 (package ortac-qcheck-stm)
 (deps
  (package ortac-core)
  (package ortac-qcheck-stm))
 (action
  (setenv
   ORTAC_ONLY_PLUGIN
   qcheck-stm
   (with-stderr-to
    ref_errors
    (with-stdout-to
     %{target}
     (run ortac qcheck-stm %{dep:ref.mli} "make 42" "t"))))))

(rule
 (alias runtest)
 (package ortac-qcheck-stm)
 (action
  (progn
   (diff ref_errors.expected ref_errors)
   (diff ref_stm_tests.expected.ml ref_stm_tests.ml))))

(rule
 (alias launchtests)
 (action
  (run %{dep:ref_stm_tests.exe} -v)))
